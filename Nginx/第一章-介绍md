## 是什么？

 Nginx同Apache一样都是一种`WEB服务器`。基于`REST架构`风格，**以统一资源描述符(Uniform Resources Identifier)URI或者统一资源定位符(Uniform Resources Locator)URL作为沟通依据，通过HTTP协议提供各种网络服务 **。 

*   Apache

    `说明：`

    Apache的发展时期很长，而且是毫无争议的世界第一大服务器。

    `优点:`

    C开发、稳定、开源、跨平台等等。

    `缺点：`

    1.  它出现的时间太长了，它兴起的年代，互联网产业远远比不上现在。所以它被设计为一个`重量级`的web服务器。
    2.  基于`Select网络模型(当用户发起一次请求，select模型就会遍历扫描当前所有的请求栈)`导致性能偏低，是`不支持高并发`的服务器。

    2.  **在Apache上运行数以万计的并发访问，会导致服务器消耗大量内存。操作系统对其进行进程或线程间的切换也消耗了大量的CPU资源，导致HTTP请求的平均响应速度降低**。

    3.  一个连接对应一个进程，进程死掉只会影响一个用户。

    >   这些都决定了Apache不可能成为高性能WEB服务器，轻量级高并发服务器Nginx就应运而生了。

*   Nginx

    `说明：`

     *Nginx*是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。 

    `优点:`

    C开发、轻量、占用资源底、高性能(Epool网络模型)、高并发(2~4万并发连接数 )、跨平台、热部署等等。

    `缺点：`

     对比apache不稳定，由于是`单进程多线程`，进程死掉会影响很多用户 

    >   这些都决定了Apache不可能成为高性能WEB服务器，轻量级高并发服务器Nginx就应运而生了。

*   WEB服务器

    严格意义上Web服务器只负责处理HTTP协议，接收各种静态和动态请求。web服务器可以直接处理静态请求，但是不能处理动态请求，需要建起转给应用服务器处理。

*   应用服务器

    应用服务器处理业务逻辑， 每种语言都有自己实现的应用服务器。但是其实现的协议和原理也是大同小异的。比如java有tomcat，jboss，python有tornado等等 。



## 主要应用场景

![1610025476524](第一章-介绍md.assets/1610025476524.png)



## Nginx平台-OpenResty

 OpenResty ®是一个成熟的网络平台，整合了我们的加强版 [Nginx的](http://openresty.org/en/nginx.html)核心，我们的加强版[LuaJIT](https://github.com/openresty/luajit2)，许多浓墨重彩Lua库，大量的高品质[第三方的Nginx模块](http://openresty.org/en/components.html)，并且大部分外部依赖的。它旨在帮助开发人员轻松构建可伸缩的Web应用程序，Web服务和动态Web网关。 



*   下载

    http://openresty.org/en/download.html（win64版本即可）

*   启动

    >   解压缩后进入根目录执行nginx.exe

*   访问

    http://localhost/

    ![1610539853059](第一章-介绍md.assets/1610539853059.png)

`命令：`

````bash
#进入解压缩后根目录
--启动
根目录/nginx
--停止
根目录/nginx -s stop
--重启
根目录/nginx -s reload
--检验nginx配置是否正确
根目录/nginx -t
````











